options("repos"="http://cran.itam.mx")
# Install Packages
#0
if (require("devtools") == FALSE){
install.packages("devtools")
}
suppressMessages(library("devtools"))
#a
if (require("aplpack") == FALSE){
install.packages("aplpack")
}
suppressMessages(library("aplpack"))
if (require("abind") == FALSE){
install.packages("abind")
}
suppressMessages(library("abind"))
#b
if (require("bayesQR") == FALSE){
suppressMessages(library("devtools"))
install_github("cran/bayesQR")
}
suppressMessages(library("bayesQR"))
#c
#if (require("car") == FALSE){
#  install.packages("car")
#}
#suppressMessages(library("car"))
if (require("colorspace") == FALSE){
install.packages("colorspace")
}
suppressMessages(library("colorspace"))
if (require("class") == FALSE){
install.packages("class")
}
suppressMessages(library("class"))
#d
if (require("data.table") == FALSE){
install.packages("data.table")
}
suppressMessages(library("data.table"))
if (require("doBy") == FALSE){
suppressMessages(library("devtools"))
install_github("cran/doBy")
}
suppressMessages(library("doBy"))
if (require("DPpackage") == FALSE){
install.packages("DPpackage")
}
suppressMessages(library("DPpackage"))
#g
if (require("GB2") == FALSE){
install.packages("GB2")
}
suppressMessages(library("GB2"))
#e
if (require("effects") == FALSE){
install.packages("effects")
}
suppressMessages(library("effects"))
#f
if (require("FastKNN") == FALSE){
install.packages("FastKNN")
}
suppressMessages(library("FastKNN"))
if (require("foreign") == FALSE){
install.packages("foreign")
}
suppressMessages(library("foreign"))
#g
if (require("GPDPQuantReg") == FALSE){
suppressMessages(library("devtools"))
install_github("opardo/GPDPQuantReg")
}
suppressMessages(library("GPDPQuantReg"))
#h
if (require("Hmisc") == FALSE){
install.packages("Hmisc")
}
suppressMessages(library("Hmisc"))
#i
#if (require("INLA") == FALSE){
#  install.packages("INLA", repos="https://inla.r-inla-download.org/R/stable", dep=TRUE)
#}
#library("INLA")
#k
if (require("kamila") == FALSE){
suppressMessages(library("devtools"))
install_github("ahfoss/kamila")
}
suppressMessages(library("kamila"))
#l
if (require("lmtest") == FALSE){
install.packages("lmtest")
}
suppressMessages(library("lmtest"))
if (require("leaps") == FALSE){
install.packages("leaps")
}
suppressMessages(library("leaps"))
#m
if (require("multcomp") == FALSE){
install.packages("multcomp")
}
suppressMessages(library("multcomp"))
if (require("mvtnorm") == FALSE){
install.packages("mvtnorm")
}
suppressMessages(library("mvtnorm"))
#q
if (require("quantreg") == FALSE){
install.packages("quantreg")
}
suppressMessages(library("quantreg"))
#s
if (require("survey") == FALSE){
install.packages("survey")
}
suppressMessages(library("survey"))
if (require("survival") == FALSE){
install.packages("survival")
}
suppressMessages(library("survival"))
if (require("splines") == FALSE){
install.packages("splines")
}
suppressMessages(library("splines"))
#r
if (require("reshape") == FALSE){
install.packages("reshape")
}
suppressMessages(library("reshape"))
if (require("rgl") == FALSE){
install.packages("rgl")
}
suppressMessages(library("rgl"))
if (require("relimp") == FALSE){
install.packages("relimp")
}
suppressMessages(library("relimp"))
if (require("RODBC") == FALSE){
install.packages("RODBC")
}
suppressMessages(library("RODBC"))
#s
if (require("stats") == FALSE){
install.packages("stats")
}
suppressMessages(library("stats"))
if (require("survey") == FALSE){
install.packages("survey")
}
suppressMessages(library("survey"))
set.seed(12345)
memory.size(max = TRUE)
options("repos"="http://cran.itam.mx")
# Install Packages
#0
if(!require('digest')){install.packages("digest")}
library("digest")
if (!require('devtools')){install.packages("devtools")}
suppressMessages(library("devtools"))
install.packages("devtools")
install.packages("libcurl")
#a
if (!require('abind')){install.packages("abind")}
suppressMessages(library("abind"))
if (!require('aplpack')){install.packages("aplpack")}
suppressMessages(library("aplpack"))
install.packages("aplpack")
if (!require('aplpack')){install.packages("aplpack")}
suppressMessages(library("aplpack"))
if (require("car") == FALSE){
install.packages("car")
}
suppressMessages(library("car"))
install.packages("car")
rm(list=ls())
#options("repos"="http://cran.itam.mx")
# Install Packages
#0
if(!require('digest')){install.packages("digest")}
library("digest")
if(!require('devtools')){install.packages("devtools")}
suppressMessages(library("devtools"))
